dbcp连接池和普通的数据库操作：
jdbc:mysql://127.0.0.1:3306/db_library2?characterEncoding=UTF-8

c3p0中文编码：
jdbc:mysql://localhost:3306/db_library2?useUnicode=true&amp;characterEncoding=utf-8

druid中文编码：
jdbc:mysql://localhost:3306/db_library2?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8

c3p0可以自动读取命名为c3p0-config.xml的文件
<c3p0-config>
  <default-config>   
    <property name="driverClass">com.mysql.jdbc.Driver</property>
    <property name="jdbcUrl">jdbc:mysql://localhost:3306/db_library2?useUnicode=true&amp;characterEncoding=utf-8</property>
    <property name="user">root</property>
    <property name="password"></property>
<!-- 初始化连接池数量 -->
    <property name="initialPoolSize">10</property>
<!-- 最大空闲时间 -->
    <property name="maxIdleTime">30</property>
<!-- 最大连接池数量 -->
    <property name="maxPoolSize">30</property>
<!-- 最小连接池数量 -->    
    <property name="minPoolSize">10</property>
  </default-config> 
 
  <named-config name="mySource">
    <property name="driverClass">com.mysql.jdbc.Driver</property>
    <property name="jdbcUrl">jdbc:mysql://localhost:3306/db_library2</property>
    <property name="user">root</property>
    <property name="password"></property>
 
    <property name="initialPoolSize">10</property>
    <property name="maxIdleTime">30</property>
    <property name="maxPoolSize">30</property>
    <property name="minPoolSize">10</property>
  </named-config>
</c3p0-config>


druid.properties
driverClassName=com.mysql.jdbc.Driver
url=jdbc:mysql://localhost:3306/db_library2?useUnicode=true&characterEncoding=utf8&characterSetResults=utf8
username=root
password=
initialSize=10
maxWait=30
maxActive=30
读取druid.properties
//	1导入jar包
//	2定义配置文件
//	3加载配置文件
	Properties pro = new Properties();
	InputStream is = DruidDemo.class.getClassLoader().getResourceAsStream("druid.properties");
	pro.load(is);
//	4获取连接池对象
	DataSource ds = DruidDataSourceFactory.createDataSource(pro);
	
//	5获取连接
	Connection conn = ds.getConnection();

//封装成方法
public static Connection getConnection() throws IOException, Exception,
		SQLException {
	Properties pro = new Properties();
	InputStream is = DruidDemo.class.getClassLoader().getResourceAsStream("druid.properties");
	pro.load(is);
//	4获取连接池对象
	DataSource ds = DruidDataSourceFactory.createDataSource(pro);
	
//	5获取连接
	Connection conn = ds.getConnection();
	return conn;
}